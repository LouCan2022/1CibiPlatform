// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PhilSys.Data.Context;

#nullable disable

namespace APIs.Migrations.PhilSys
{
    [DbContext(typeof(PhilSysDBContext))]
    [Migration("20251030080642_InitialPhilSysMigration")]
    partial class InitialPhilSysMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PhilSys.Data.Entities.PhilSysTransaction", b =>
                {
                    b.Property<Guid>("Tid")
                        .HasColumnType("uuid");

                    b.Property<string>("BirthDate")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FaceLivenessSessionId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("HashToken")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("InquiryType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool>("IsTransacted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PCN")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("Suffix")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime?>("TransactedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedLivenessIdAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WebHookUrl")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Tid");

                    b.ToTable("PhilSysTransactions");
                });

            modelBuilder.Entity("PhilSys.Data.Entities.PhilSysTransactionResult", b =>
                {
                    b.Property<int>("Trid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Trid"));

                    b.Property<string>("error")
                        .HasColumnType("text");

                    b.Property<string>("error_description")
                        .HasColumnType("text");

                    b.Property<Guid>("idv_session_id")
                        .HasColumnType("uuid");

                    b.Property<string>("message")
                        .HasColumnType("text");

                    b.Property<bool>("verified")
                        .HasColumnType("boolean");

                    b.HasKey("Trid");

                    b.HasIndex("idv_session_id")
                        .IsUnique();

                    b.ToTable("PhilSysTransactionResults");
                });

            modelBuilder.Entity("PhilSys.Data.Entities.PhilSysTransactionResult", b =>
                {
                    b.HasOne("PhilSys.Data.Entities.PhilSysTransaction", null)
                        .WithOne()
                        .HasForeignKey("PhilSys.Data.Entities.PhilSysTransactionResult", "idv_session_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PhilSys.DTO.DataSubject", "data_subject", b1 =>
                        {
                            b1.Property<int>("PhilSysTransactionResultTrid")
                                .HasColumnType("integer");

                            b1.Property<string>("birth_date")
                                .HasColumnType("text");

                            b1.Property<string>("blood_type")
                                .HasColumnType("text");

                            b1.Property<string>("digital_id")
                                .HasColumnType("text");

                            b1.Property<string>("email")
                                .HasColumnType("text");

                            b1.Property<string>("face_image_url")
                                .HasColumnType("text");

                            b1.Property<string>("first_name")
                                .HasColumnType("text");

                            b1.Property<string>("full_name")
                                .HasColumnType("text");

                            b1.Property<string>("gender")
                                .HasColumnType("text");

                            b1.Property<string>("last_name")
                                .HasColumnType("text");

                            b1.Property<string>("marital_status")
                                .HasColumnType("text");

                            b1.Property<string>("middle_name")
                                .HasColumnType("text");

                            b1.Property<string>("mobile_number")
                                .HasColumnType("text");

                            b1.Property<string>("national_id_number")
                                .HasColumnType("text");

                            b1.Property<string>("suffix")
                                .HasColumnType("text");

                            b1.HasKey("PhilSysTransactionResultTrid");

                            b1.ToTable("PhilSysTransactionResults");

                            b1.WithOwner()
                                .HasForeignKey("PhilSysTransactionResultTrid");

                            b1.OwnsOne("PhilSys.DTO.Address", "address", b2 =>
                                {
                                    b2.Property<int>("DataSubjectPhilSysTransactionResultTrid")
                                        .HasColumnType("integer");

                                    b2.Property<string>("permanent")
                                        .HasColumnType("text");

                                    b2.Property<string>("present")
                                        .HasColumnType("text");

                                    b2.HasKey("DataSubjectPhilSysTransactionResultTrid");

                                    b2.ToTable("PhilSysTransactionResults");

                                    b2.WithOwner()
                                        .HasForeignKey("DataSubjectPhilSysTransactionResultTrid");
                                });

                            b1.OwnsOne("PhilSys.DTO.PlaceOfBirth", "place_of_birth", b2 =>
                                {
                                    b2.Property<int>("DataSubjectPhilSysTransactionResultTrid")
                                        .HasColumnType("integer");

                                    b2.Property<string>("country")
                                        .HasColumnType("text");

                                    b2.Property<string>("full")
                                        .HasColumnType("text");

                                    b2.Property<string>("municipality")
                                        .HasColumnType("text");

                                    b2.Property<string>("province")
                                        .HasColumnType("text");

                                    b2.HasKey("DataSubjectPhilSysTransactionResultTrid");

                                    b2.ToTable("PhilSysTransactionResults");

                                    b2.WithOwner()
                                        .HasForeignKey("DataSubjectPhilSysTransactionResultTrid");
                                });

                            b1.Navigation("address");

                            b1.Navigation("place_of_birth");
                        });

                    b.Navigation("data_subject")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
