@using MudBlazor

@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject IAuthService IAuthService

<style>
    .mud-drawer {
        border-radius: 30px 30px 30px 30px !important;
    }

    .mud-drawer.mud-drawer-open {
        border-radius: 30px 30px 30px 30px !important;
    }

    .mud-appbar {
        border-radius: 30px 30px 30px 30px !important;
    }

    .mud-navmenu {
        color: white !important;
    }

    .mud-nav-link {
        color: white !important;
        transition: background-color 0.3s ease;
    }

    .mud-nav-link:hover {
        background-color: rgba(255, 255, 255, 0.1) !important;
    }
</style>

<MudThemeProvider Theme="@_myTheme" @bind-IsDarkMode="@_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<ErrorBoundary>
    <ChildContent>
        @if (_isAuthenticated)
        {
            <MudLayout >
                <!-- AppBar -->
                <MudAppBar Style="@GetAppBarStyle()">
                    <MudIconButton Icon="@Icons.Material.Filled.Menu" Style="@GetMenuIconStyle()" Edge="Edge.Start" OnClick="@DrawerToggle" />
                    <MudSpacer />
                    <MudIconButton Icon="@(_isDarkMode? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)"
                                   Style="Color.Inherit"
                                   OnClick="@ToggleDarkMode" />
                </MudAppBar>
                <!-- Drawer -->
                <MudDrawer @bind-Open="_drawerOpen" 
                           Elevation="1"
                           Style="box-shadow: 0 0 30px rgba(0, 0, 0, 0.25); border-radius: 8px;">
                    <MudDrawerHeader Style="display: flex; justify-content: center; align-items: center; background: white;">
                        <MudImage Src="images/logo/cibi.png"
                                  Alt="Cibi Logo"
                                  Style="width: 125px; height:45px;" />
                    </MudDrawerHeader>
                        <MudNavMenu Style="background: linear-gradient(90deg, #102247 0%, #2a77ae 50%, #68c0d6 100%) !important; color: white;">
                            <MudNavLink Href="counter" Match="NavLinkMatch.All">
                                <MudIcon Icon="@Icons.Material.Filled.Dashboard" Class="me-2" />
                                Dashboard
                            </MudNavLink>

                            <MudNavLink Href="philsys" Match="NavLinkMatch.Prefix">
                                <MudIcon Icon="@Icons.Material.Filled.AccountCircle" Class="me-2" />
                                PhilSys
                            </MudNavLink>

                            <MudNavGroup Title="Settings" Expanded="false" Icon="@Icons.Material.Filled.Settings">
                                <MudNavLink Href="page" Match="NavLinkMatch.Prefix">
                                    <MudIcon Icon="@Icons.Material.Filled.Group" Class="me-2" />
                                    Users
                                </MudNavLink>
                                <MudNavLink Href="none" Match="NavLinkMatch.Prefix">
                                    <MudIcon Icon="@Icons.Material.Filled.Security" Class="me-2" />
                                    Security
                                </MudNavLink>
                            </MudNavGroup>

                            <MudNavLink Href="about" Match="NavLinkMatch.Prefix" ForceLoad="false">
                                <MudIcon Icon="@Icons.Material.Filled.Info" Class="me-2" />
                                About
                            </MudNavLink>
                        </MudNavMenu>
                </MudDrawer>
                <!-- Main content -->
                <MudMainContent>
                        @Body
                </MudMainContent>
            </MudLayout>
        }
        else
        {
            <!-- Loading -->
            <MudContainer Class="d-flex justify-center align-center" Style="height: 100vh;">
                <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
            </MudContainer>
        }
    </ChildContent>
    <ErrorContent Context="exception">
        <MudContainer Class="d-flex flex-column justify-center align-center" Style="height: 100vh; gap: 20px;">
            <MudPaper Class="pa-8" Elevation="3" Style="max-width: 600px; text-align: center;">
                <MudIcon Icon="@Icons.Material.Filled.Error" Color="Color.Error" Size="Size.Large" Class="mb-4" />
                <MudText Typo="Typo.h4" Color="Color.Error" Class="mb-2">
                    Oops! Something went wrong
                </MudText>
                <MudText Typo="Typo.body1" Class="mb-4">
                    We encountered an unexpected error. Please try refreshing the page.
                </MudText>
                <MudExpansionPanels>
                    <MudExpansionPanel Text="Error Details">
                        <MudText Typo="Typo.body2" Style="font-family: monospace; white-space: pre-wrap; word-break: break-word;">
                            @exception.Message
                        </MudText>
                    </MudExpansionPanel>
                </MudExpansionPanels>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           OnClick="@(() => Navigation.NavigateTo(Navigation.Uri, true))"
                           StartIcon="@Icons.Material.Filled.Refresh"
                           Class="mt-4">
                    Reload Page
                </MudButton>
            </MudPaper>
        </MudContainer>
    </ErrorContent>
</ErrorBoundary>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = false;
    private bool _isAuthenticated = false;

    private MudTheme _myTheme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = "#667eea",
            Secondary = "#764ba2",
            Background = Colors.Gray.Lighten5,
            Surface = Colors.Shades.White,
            AppbarBackground = "#667eea",
            AppbarText = Colors.Shades.White,
            TextPrimary = Colors.Gray.Darken3
        },
        PaletteDark = new PaletteDark()
        {
            Primary = "#8b9dff",
            Secondary = "#9d6bc7",
            Background = Colors.Gray.Darken4,
            Surface = Colors.Gray.Darken3,
            AppbarBackground = "#5568d3",
            AppbarText = Colors.Shades.White,
            TextPrimary = Colors.Shades.White
        },
        LayoutProperties = new LayoutProperties()
        {
            DefaultBorderRadius = "30px",
            DrawerWidthLeft = "260px",
            DrawerWidthRight = "260px",
            AppbarHeight = "64px"
        }
    };

    private void DrawerToggle() => _drawerOpen = !_drawerOpen;
    private void ToggleDarkMode() => _isDarkMode = !_isDarkMode;

    private string GetAppBarStyle()
    {
        return _isDarkMode
            ? "background: linear-gradient(90deg, #68c0d6 0%, #2a77ae 50%, #102247 100%) !important;"
            : "background: linear-gradient(90deg, #102247 0%, #2a77ae 50%, #68c0d6 100%) !important;";
    }
    private string GetMenuIconStyle()
    {
        return _isDarkMode
            ? "color: #102247;"   
            : "color: white;";    
    }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var userData = await IAuthService.GetUserInfoIfAuthenticated();

            if (string.IsNullOrEmpty(userData))
            {
                 Console.WriteLine($"UserData: {userData}");
                Navigation.NavigateTo("/login", true);
            }

            _isAuthenticated = true;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Authentication Error: {ex.Message}");
            throw;
        }
    }
}