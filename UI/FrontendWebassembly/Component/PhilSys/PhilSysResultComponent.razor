@layout PhilSysLayout
@using MudBlazor

<MudPaper Class="p-6 d-flex flex-wrap align-items-start gap-6 position-relative"
          Style="background-color: var(--mud-palette-surface); border-radius: 12px; padding: 20px 20px 60px 0px;">

    <div class="d-flex flex-column align-items-center" style="width: 220px;">
        <MudPaper Elevation="0"
                  Class="d-flex justify-center align-center mb-3"
                  Style="width: 200px; height: 200px; background-color: var(--mud-palette-background); border-radius: 0px;">
            <MudImage Src="@(FaceUrl ?? "images/philsys/default_picture.jpg")"
                      Alt="PhilSys Logo"
                      Width="120" />
        </MudPaper>

        <ButtonComponent StartIcon="@Icons.Material.Filled.Download" Style="width: 170px;">
            API Response
        </ButtonComponent>
    </div>

    <div class="flex-grow-1" style="min-width: 500px;">
        <table style="width: 100%; border-collapse: collapse;">
            @if (InfoRows != null)
            {
                @foreach (var row in InfoRows)
                {
                    <tr>
                        <td style="width: 25%; padding: 6px 8px; vertical-align: top; color: var(--mud-palette-text-primary);">
                            <MudText Typo="Typo.body1">@row.Label</MudText>
                        </td>
                        <td style="width: 25%; padding: 6px 8px;">
                            <MudText Style="color: var(--mud-palette-text-primary); font-weight: bold;" Typo="Typo.body1">
                                @(string.IsNullOrWhiteSpace(row.Value) ? "No Data Found" : row.Value)
                            </MudText>
                        </td>
                    </tr>
                }
            }
        </table>
    </div>

    <div class="position-absolute" style="bottom: 16px; right: 16px;">
        <ButtonComponent StartIcon="@Icons.Material.Filled.Search">
            Search Again
        </ButtonComponent>
    </div>
</MudPaper>

@code {
    [Parameter]
    public UpdateFaceLivenessSessionResponseDTO? VerificationResult { get; set; }

    private List<(string Label, string Value)>? InfoRows;


    private string? FaceUrl;



    protected override void OnInitialized()
{
    if (VerificationResult == null)
    {
        InfoRows = new List<(string, string)>
        {
            ("Error", "No data available")
        };
        return;
    }

    InfoRows = new()
    {
        ("PhilSys Card Number", VerificationResult.reference ?? "No Data Found"),
        ("Digital ID Number", VerificationResult.code ?? "No Data Found"),
        ("First Name", VerificationResult.first_name ?? "No Data Found"),
        ("Middle Name", VerificationResult.middle_name ?? "No Data Found"),
        ("Last Name", VerificationResult.last_name ?? "No Data Found"),
        ("Suffix", VerificationResult.suffix ?? "No Data Found"),
        ("Gender", VerificationResult.gender ?? "No Data Found"),
        ("Birth Date", VerificationResult.birth_date ?? "No Data Found"),
        ("Place of Birth", VerificationResult.place_of_birth ?? "No Data Found"),
        ("Permanent Address", VerificationResult.full_address ?? "No Data Found"),
        ("Present Address", VerificationResult.present_full_address ?? "No Data Found"),
        ("Marital Status", VerificationResult.marital_status ?? "No Data Found"),
        ("Mobile Number", VerificationResult.mobile_number ?? "No Data Found"),
        ("Email", VerificationResult.email ?? "No Data Found"),
        ("Blood Type", VerificationResult.blood_type ?? "No Data Found")
    };
}
}
