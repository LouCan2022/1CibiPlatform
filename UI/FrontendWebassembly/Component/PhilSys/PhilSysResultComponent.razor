@layout PhilSysLayout
@using MudBlazor
<MudPaper Class="p-6 d-flex flex-wrap align-items-start gap-6 position-relative"
          Style="background-color: var(--mud-palette-surface); border-radius: 12px; padding: 20px 20px 60px 0px;">

    <div class="d-flex flex-column align-items-center" style="width: 220px;">
        <MudPaper Elevation="0"
                  Class="d-flex justify-center align-center mb-3"
                  Style="width: 200px; height: 200px; background-color: var(--mud-palette-background); border-radius: 0px;">
            <MudIcon Icon="@Icons.Material.Filled.Image" Size="Size.Large" Color="Color.Secondary" />
        </MudPaper>

        <ButtonComponent StartIcon="@Icons.Material.Filled.Download" Style="width: 170px;">
            API Response
        </ButtonComponent>
    </div>

    <div class="flex-grow-1" style="min-width: 500px;">
        <table style="width: 100%; border-collapse: collapse;">
            @foreach (var row in InfoRows)
            {
                <tr>
                    <td style="width: 25%; padding: 6px 8px; vertical-align: top; color: var(--mud-palette-text-primary);">
                        <MudText Typo="Typo.body1">@row.Label</MudText>
                    </td>
                    <td style="width: 25%; padding: 6px 8px;">
                        <MudText Style="color: var(--mud-palette-text-primary); font-weight: bold;" Typo="Typo.body1">
                            @(string.IsNullOrWhiteSpace(row.Value) ? "No Data" : row.Value)
                        </MudText>
                    </td>
                </tr>
            }
        </table>
    </div>

    <div class="position-absolute" style="bottom: 16px; right: 16px;">
        <ButtonComponent StartIcon="@Icons.Material.Filled.Search" >
            Search Again
        </ButtonComponent>
    </div>
</MudPaper>


@code {
    [Parameter]
    public static UpdateFaceLivenessSessionResponseDTO VerificationResult { get; set; } 
    private List<(string Label, string Value)> InfoRows = new()
    {
        ("PhilSys Card Number", VerificationResult.reference),
        ("Digital ID Number", VerificationResult.code),
        ("First Name", VerificationResult.first_name),
        ("Middle Name", VerificationResult.middle_name),
        ("Last Name", VerificationResult.last_name),
        ("Suffix", VerificationResult.suffix!),
        ("Gender", VerificationResult.gender),
        ("Birth Date", VerificationResult.birth_date),
        ("Place of Birth", VerificationResult.place_of_birth),
        ("Permanent Address", VerificationResult.full_address),
        ("Present Address", VerificationResult.present_full_address),
        ("Marital Status", VerificationResult.marital_status),
        ("Mobile Number", VerificationResult.mobile_number),
        ("Email", VerificationResult.email),
        ("Blood Type", VerificationResult.blood_type)
    };
}
